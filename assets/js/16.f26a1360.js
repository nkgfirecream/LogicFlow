(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{375:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"自定义连线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义连线"}},[t._v("#")]),t._v(" 自定义连线")]),t._v(" "),a("p",[t._v("同自定义节点一样，在具体业务中我们也可能需要对连线进行一定的自定义，比如流程中高亮表示这个流程的执行路径。")]),t._v(" "),a("h2",{attrs:{id:"使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),a("p",[t._v("自定义连线使用的方法与自定义节点相同，该方法（"),a("code",[t._v("getAttributes")]),t._v("）除了返回节点的构造函数，还会返回连线的构造函数。")]),t._v(" "),a("h3",{attrs:{id:"getattributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getattributes"}},[t._v("#")]),t._v(" getAttributes")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("lf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'customPolyline'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PolylineEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PolylineEdgeModel "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPolylineEdge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PolylineEdge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" extendKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomPolylineEdge"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttributes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" attr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttributes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isExecuted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stroke "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPolylineEdgeModel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PolylineEdgeModel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    view"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CustomPolylineEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CustomPolylineEdgeModel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如上代码所示，我们可以依据当前的业务状态，重新设置当前 edge 的 attributes。")]),t._v(" "),a("p",[t._v("attributes 的内容为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("key")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("stroke")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("连线和箭头当前状态的颜色")])]),t._v(" "),a("tr",[a("td",[t._v("strokeWidth")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("连线的宽度")])]),t._v(" "),a("tr",[a("td",[t._v("strokeOpacity")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("连线透明度")])]),t._v(" "),a("tr",[a("td",[t._v("selectedShadow")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("连线选中的阴影效果")])]),t._v(" "),a("tr",[a("td",[t._v("isSelected")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("连线选中状态")])]),t._v(" "),a("tr",[a("td",[t._v("isHoverd")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("连线是否被hoverd")])]),t._v(" "),a("tr",[a("td",[t._v("properties")]),t._v(" "),a("td",[t._v("object")]),t._v(" "),a("td",[t._v("连线属性")])]),t._v(" "),a("tr",[a("td",[t._v("hoverStroke")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("设置的连线被hover的颜色")])]),t._v(" "),a("tr",[a("td",[t._v("selectedStroke")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("设置的连线被选中的颜色")])])])]),t._v(" "),a("h3",{attrs:{id:"extendkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extendkey"}},[t._v("#")]),t._v(" extendKey")]),t._v(" "),a("p",[t._v("在注册的时候，我们自定义的 class 会有一个静态属性"),a("code",[t._v("extendKey")]),t._v(", 当你注册的元素希望能继续被其它元素继承的时候，则必须使用这个属性标识你注册的元素的"),a("code",[t._v("class.name")]),t._v("。")]),t._v(" "),a("p",[t._v("详细原因请参考："),a("RouterLink",{attrs:{to:"/guide/advance/"}},[t._v("自定义节点原理")])],1),t._v(" "),a("h3",{attrs:{id:"getarrowstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getarrowstyle"}},[t._v("#")]),t._v(" getArrowStyle")]),t._v(" "),a("p",[t._v("我们除了可以通过重写"),a("code",[t._v("getAttributes")]),t._v("来实现修改连线的样式，也可以通过重写"),a("code",[t._v("getArrowStyle")]),t._v("来实现对箭头样式的细粒度控制。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("lf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'customPolyline'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PolylineEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PolylineEdgeModel "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPolylineEdge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PolylineEdge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" extendKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CustomPolylineEdge'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArrowStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" style "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArrowStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fill "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'transparent'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPolylineEdgeModel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PolylineEdgeModel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    view"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CustomPolylineEdge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CustomPolylineEdgeModel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("key")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("stroke")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("箭头当前状态的颜色")])]),t._v(" "),a("tr",[a("td",[t._v("strokeWidth")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("箭头的宽度")])]),t._v(" "),a("tr",[a("td",[t._v("fill")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("箭头填充颜色")])]),t._v(" "),a("tr",[a("td",[t._v("offset")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("箭头长度")])]),t._v(" "),a("tr",[a("td",[t._v("verticalLength")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("箭头垂直于连线的距离")])])])]),t._v(" "),a("h3",{attrs:{id:"getshape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getshape"}},[t._v("#")]),t._v(" getShape")]),t._v(" "),a("p",[t._v("Logic Flow的自定义机制是基于类的继承来实现，理论上可以通过"),a("code",[t._v("getShape")]),t._v("实现任何想要的连线方式。但是由于开发成本较高，而且内置的直线、折线和即将支持的曲线能满足绝大部分需求，这里不详细说明如何自定义连线的形状和交互了。如果有需要，建议阅读源码。也欢迎将你实现的自定义连线通过"),a("code",[t._v("extension")]),t._v("的方式提交 PR 给我们。")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[a("example",{attrs:{height:250}})],1)])}),[],!1,null,null,null);s.default=n.exports}}]);